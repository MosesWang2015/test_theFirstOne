//initä¸‹

package com.hsae.ag35.remotekey.router.init;

import android.content.ContentProvider;
import android.content.ContentValues;
import android.content.pm.PackageManager;
import android.database.Cursor;
import android.net.Uri;
import android.os.Bundle;
import android.os.Process;
import com.hsae.ag35.remotekey.router.Router;

import java.util.Set;

public class InitProvider extends ContentProvider {
    public InitProvider() {
    }

    @Override
    public int delete(Uri uri, String selection, String[] selectionArgs) {
        return 0;
    }

    @Override
    public String getType(Uri uri) {
        return null;
    }

    @Override
    public Uri insert(Uri uri, ContentValues values) {
        return null;
    }

    @Override
    public boolean onCreate() {
        autoRegistRouter();
        return true;
    }

    @Override
    public Cursor query(Uri uri, String[] projection, String selection,
                        String[] selectionArgs, String sortOrder) {
        return null;
    }

    @Override
    public int update(Uri uri, ContentValues values, String selection,
                      String[] selectionArgs) {
        return 0;
    }

    private void autoRegistRouter() {
        new Thread(() -> {
            Process.setThreadPriority(Process.THREAD_PRIORITY_BACKGROUND);
            try {
                Bundle metaData = getContext().getPackageManager().getApplicationInfo(
                        getContext().getPackageName(), PackageManager.GET_META_DATA).metaData;
                Set<String> keySet = metaData.keySet();
                for (String key : keySet) {
                    Object object = metaData.get(key);
                    if (!(object instanceof String)) {
                        continue;
                    }

                    String value = metaData.getString(key);
                    if ("router".equalsIgnoreCase(value)) {
                        Router.register(Class.forName(key));
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }).start();
    }
}
//**********************************
package com.hsae.ag35.remotekey.router;

import androidx.annotation.Keep;

import java.util.HashMap;
import java.util.Map;

public class Router {
    private static final String ROUTER_SIGN = "com.hsae.ag35.remotekey.router.interfaces";
    private static Map<Class, Object> sRouters = new HashMap<>();

    public static void register(Class impl) {
        try {
            Class[] interfaces = impl.getInterfaces();
            for (Class anInterface : interfaces) {
                if (anInterface.getName().startsWith(ROUTER_SIGN)) {
                    sRouters.put(anInterface, impl.newInstance());
                    break;
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public static void registerInstance(Object instance) {
        Class[] interfaces = instance.getClass().getInterfaces();
        for (Class anInterface : interfaces) {
            if (anInterface.getName().startsWith(ROUTER_SIGN)) {
                sRouters.put(anInterface, instance);
                break;
            }
        }
    }

    public static void unregisterInstance(Object instance) {
        Class[] interfaces = instance.getClass().getInterfaces();
        for (Class anInterface : interfaces) {
            if (anInterface.getName().startsWith(ROUTER_SIGN)) {
                sRouters.remove(anInterface);
                break;
            }
        }
    }

    public static <T> T get(Class<T> type) {
        Object o = sRouters.get(type);
        return o == null ? null : (T) o;
    }

    @Keep
    private static void clear() {
        sRouters.clear();
    }
}
